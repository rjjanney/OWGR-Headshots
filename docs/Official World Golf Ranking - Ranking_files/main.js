(function () { var a, b, c; a = jQuery, c = function () { function a() { this.fadeDuration = 500, this.fitImagesInViewport = !0, this.resizeDuration = 700, this.showImageNumberLabel = !0, this.wrapAround = !1 } return a.prototype.albumLabel = function (a, b) { return "Image " + a + " of " + b }, a }(), b = function () { function b(a) { this.options = a, this.album = [], this.currentImageIndex = void 0, this.init() } return b.prototype.init = function () { return this.enable(), this.build() }, b.prototype.enable = function () { var b = this; return a("body").on("click", "a[rel^=lightbox], area[rel^=lightbox], a[data-lightbox], area[data-lightbox]", function (c) { return b.start(a(c.currentTarget)), !1 }) }, b.prototype.build = function () { var b = this; return a("<div id='lightboxOverlay' class='lightboxOverlay'></div><div id='lightbox' class='lightbox'><div class='lb-outerContainer'><div class='lb-container'><img class='lb-image' src='' /><div class='lb-nav'><a class='lb-prev' href='' ></a><a class='lb-next' href='' ></a></div><div class='lb-loader'><a class='lb-cancel'></a></div></div></div><div class='lb-dataContainer'><div class='lb-data'><div class='lb-details'><span class='lb-caption'></span><span class='lb-number'></span></div><div class='lb-closeContainer'><a class='lb-close'></a></div></div></div></div>").appendTo(a("body")), this.$lightbox = a("#lightbox"), this.$overlay = a("#lightboxOverlay"), this.$outerContainer = this.$lightbox.find(".lb-outerContainer"), this.$container = this.$lightbox.find(".lb-container"), this.containerTopPadding = parseInt(this.$container.css("padding-top"), 10), this.containerRightPadding = parseInt(this.$container.css("padding-right"), 10), this.containerBottomPadding = parseInt(this.$container.css("padding-bottom"), 10), this.containerLeftPadding = parseInt(this.$container.css("padding-left"), 10), this.$overlay.hide().on("click", function () { return b.end(), !1 }), this.$lightbox.hide().on("click", function (c) { return "lightbox" === a(c.target).attr("id") && b.end(), !1 }), this.$outerContainer.on("click", function (c) { return "lightbox" === a(c.target).attr("id") && b.end(), !1 }), this.$lightbox.find(".lb-prev").on("click", function () { return 0 === b.currentImageIndex ? b.changeImage(b.album.length - 1) : b.changeImage(b.currentImageIndex - 1), !1 }), this.$lightbox.find(".lb-next").on("click", function () { return b.currentImageIndex === b.album.length - 1 ? b.changeImage(0) : b.changeImage(b.currentImageIndex + 1), !1 }), this.$lightbox.find(".lb-loader, .lb-close").on("click", function () { return b.end(), !1 }) }, b.prototype.start = function (b) { var c, d, e, f, g, h, i, j, k, l, m, n, o; if (a(window).on("resize", this.sizeOverlay), a("select, object, embed").css({ visibility: "hidden" }), this.$overlay.width(a(document).width()).height(a(document).height()).fadeIn(this.options.fadeDuration), this.album = [], g = 0, e = b.attr("data-lightbox")) for (n = a(b.prop("tagName") + '[data-lightbox="' + e + '"]'), f = j = 0, l = n.length; l > j; f = ++j) d = n[f], this.album.push({ link: a(d).attr("href"), title: a(d).attr("title") }), a(d).attr("href") === b.attr("href") && (g = f); else if ("lightbox" === b.attr("rel")) this.album.push({ link: b.attr("href"), title: b.attr("title") }); else for (o = a(b.prop("tagName") + '[rel="' + b.attr("rel") + '"]'), f = k = 0, m = o.length; m > k; f = ++k) d = o[f], this.album.push({ link: a(d).attr("href"), title: a(d).attr("title") }), a(d).attr("href") === b.attr("href") && (g = f); c = a(window), i = c.scrollTop() + c.height() / 10, h = c.scrollLeft(), this.$lightbox.css({ top: i + "px", left: h + "px" }).fadeIn(this.options.fadeDuration), this.changeImage(g) }, b.prototype.changeImage = function (b) { var c, d, e = this; this.disableKeyboardNav(), c = this.$lightbox.find(".lb-image"), this.sizeOverlay(), this.$overlay.fadeIn(this.options.fadeDuration), a(".lb-loader").fadeIn("slow"), this.$lightbox.find(".lb-image, .lb-nav, .lb-prev, .lb-next, .lb-dataContainer, .lb-numbers, .lb-caption").hide(), this.$outerContainer.addClass("animating"), d = new Image, d.onload = function () { var f, g, h, i, j, k, l; return c.attr("src", e.album[b].link), f = a(d), c.width(d.width), c.height(d.height), e.options.fitImagesInViewport && (l = a(window).width(), k = a(window).height(), j = l - e.containerLeftPadding - e.containerRightPadding - 20, i = k - e.containerTopPadding - e.containerBottomPadding - 110, (d.width > j || d.height > i) && (d.width / j > d.height / i ? (h = j, g = parseInt(d.height / (d.width / h), 10), c.width(h), c.height(g)) : (g = i, h = parseInt(d.width / (d.height / g), 10), c.width(h), c.height(g)))), e.sizeContainer(c.width(), c.height()) }, d.src = this.album[b].link, this.currentImageIndex = b }, b.prototype.sizeOverlay = function () { return a("#lightboxOverlay").width(a(document).width()).height(a(document).height()) }, b.prototype.sizeContainer = function (a, b) { var c, d, e, f, g = this; f = this.$outerContainer.outerWidth(), e = this.$outerContainer.outerHeight(), d = a + this.containerLeftPadding + this.containerRightPadding, c = b + this.containerTopPadding + this.containerBottomPadding, this.$outerContainer.animate({ width: d, height: c }, this.options.resizeDuration, "swing"), setTimeout(function () { g.$lightbox.find(".lb-dataContainer").width(d), g.$lightbox.find(".lb-prevLink").height(c), g.$lightbox.find(".lb-nextLink").height(c), g.showImage() }, this.options.resizeDuration) }, b.prototype.showImage = function () { this.$lightbox.find(".lb-loader").hide(), this.$lightbox.find(".lb-image").fadeIn("slow"), this.updateNav(), this.updateDetails(), this.preloadNeighboringImages(), this.enableKeyboardNav() }, b.prototype.updateNav = function () { this.$lightbox.find(".lb-nav").show(), this.album.length > 1 && (this.options.wrapAround ? this.$lightbox.find(".lb-prev, .lb-next").show() : (this.currentImageIndex > 0 && this.$lightbox.find(".lb-prev").show(), this.currentImageIndex < this.album.length - 1 && this.$lightbox.find(".lb-next").show())) }, b.prototype.updateDetails = function () { var a = this; "undefined" != typeof this.album[this.currentImageIndex].title && "" !== this.album[this.currentImageIndex].title && this.$lightbox.find(".lb-caption").html(this.album[this.currentImageIndex].title).fadeIn("fast"), this.album.length > 1 && this.options.showImageNumberLabel ? this.$lightbox.find(".lb-number").text(this.options.albumLabel(this.currentImageIndex + 1, this.album.length)).fadeIn("fast") : this.$lightbox.find(".lb-number").hide(), this.$outerContainer.removeClass("animating"), this.$lightbox.find(".lb-dataContainer").fadeIn(this.resizeDuration, function () { return a.sizeOverlay() }) }, b.prototype.preloadNeighboringImages = function () { var a, b; this.album.length > this.currentImageIndex + 1 && (a = new Image, a.src = this.album[this.currentImageIndex + 1].link), this.currentImageIndex > 0 && (b = new Image, b.src = this.album[this.currentImageIndex - 1].link) }, b.prototype.enableKeyboardNav = function () { a(document).on("keyup.keyboard", a.proxy(this.keyboardAction, this)) }, b.prototype.disableKeyboardNav = function () { a(document).off(".keyboard") }, b.prototype.keyboardAction = function (a) { var b, c, d, e, f; b = 27, c = 37, d = 39, f = a.keyCode, e = String.fromCharCode(f).toLowerCase(), f === b || e.match(/x|o|c/) ? this.end() : "p" === e || f === c ? 0 !== this.currentImageIndex && this.changeImage(this.currentImageIndex - 1) : ("n" === e || f === d) && this.currentImageIndex !== this.album.length - 1 && this.changeImage(this.currentImageIndex + 1) }, b.prototype.end = function () { return this.disableKeyboardNav(), a(window).off("resize", this.sizeOverlay), this.$lightbox.fadeOut(this.options.fadeDuration), this.$overlay.fadeOut(this.options.fadeDuration), a("select, object, embed").css({ visibility: "visible" }) }, b }(), a(function () { var a, d; return d = new c, a = new b(d) }) }).call(this), function ($) { $.extend({ tablesorter: new function () { function benchmark(a, b) { log(a + "," + ((new Date).getTime() - b.getTime()) + "ms") } function log(a) { "undefined" != typeof console && "undefined" != typeof console.debug ? console.log(a) : alert(a) } function buildParserCache(a, b) { if (a.config.debug) var c = ""; if (0 != a.tBodies.length) { var d = a.tBodies[0].rows; if (d[0]) for (var e = [], f = d[0].cells, g = f.length, h = 0; g > h; h++) { var i = !1; $.metadata && $(b[h]).metadata() && $(b[h]).metadata().sorter ? i = getParserById($(b[h]).metadata().sorter) : a.config.headers[h] && a.config.headers[h].sorter && (i = getParserById(a.config.headers[h].sorter)), i || (i = detectParserForColumn(a, d, -1, h)), a.config.debug && (c += "column:" + h + " parser:" + i.id + "\n"), e.push(i) } return a.config.debug && log(c), e } } function detectParserForColumn(a, b, c, d) { for (var e = parsers.length, f = !1, g = !1, h = !0; "" == g && h;) c++, b[c] ? (f = getNodeFromRowAndCellIndex(b, c, d), g = trimAndGetNodeText(a.config, f), a.config.debug && log("Checking if value was empty on row:" + c)) : h = !1; for (var i = 1; e > i; i++) if (parsers[i].is(g, a, f)) return parsers[i]; return parsers[0] } function getNodeFromRowAndCellIndex(a, b, c) { return a[b].cells[c] } function trimAndGetNodeText(a, b) { return $.trim(getElementText(a, b)) } function getParserById(a) { for (var b = parsers.length, c = 0; b > c; c++) if (parsers[c].id.toLowerCase() == a.toLowerCase()) return parsers[c]; return !1 } function buildCache(a) { if (a.config.debug) var b = new Date; for (var c = a.tBodies[0] && a.tBodies[0].rows.length || 0, d = a.tBodies[0].rows[0] && a.tBodies[0].rows[0].cells.length || 0, e = a.config.parsers, f = { row: [], normalized: [] }, g = 0; c > g; ++g) { var h = $(a.tBodies[0].rows[g]), i = []; if (h.hasClass(a.config.cssChildRow)) f.row[f.row.length - 1] = f.row[f.row.length - 1].add(h); else { f.row.push(h); for (var j = 0; d > j; ++j) i.push(e[j].format(getElementText(a.config, h[0].cells[j]), a, h[0].cells[j])); i.push(f.normalized.length), f.normalized.push(i), i = null } } return a.config.debug && benchmark("Building cache for " + c + " rows:", b), f } function getElementText(a, b) { var c = ""; return b ? (a.supportsTextContent || (a.supportsTextContent = b.textContent || !1), c = "simple" == a.textExtraction ? a.supportsTextContent ? b.textContent : b.childNodes[0] && b.childNodes[0].hasChildNodes() ? b.childNodes[0].innerHTML : b.innerHTML : "function" == typeof a.textExtraction ? a.textExtraction(b) : $(b).text()) : "" } function appendToTable(a, b) { if (a.config.debug) var c = new Date; for (var d = b, e = d.row, f = d.normalized, g = f.length, h = f[0].length - 1, i = $(a.tBodies[0]), j = [], k = 0; g > k; k++) { var l = f[k][h]; if (j.push(e[l]), !a.config.appender) for (var m = e[l].length, n = 0; m > n; n++) i[0].appendChild(e[l][n]) } a.config.appender && a.config.appender(a, j), j = null, a.config.debug && benchmark("Rebuilt table:", c), applyWidget(a), setTimeout(function () { $(a).trigger("sortEnd") }, 0) } function buildHeaders(a) { if (a.config.debug) var b = new Date; var c = ($.metadata ? !0 : !1, computeTableHeaderCellIndexes(a)); return $tableHeaders = $(a.config.selectorHeaders, a).each(function (b) { if (this.column = c[this.parentNode.rowIndex + "-" + this.cellIndex], this.order = formatSortingOrder(a.config.sortInitialOrder), this.count = this.order, (checkHeaderMetadata(this) || checkHeaderOptions(a, b)) && (this.sortDisabled = !0), checkHeaderOptionsSortingLocked(a, b) && (this.order = this.lockedOrder = checkHeaderOptionsSortingLocked(a, b)), !this.sortDisabled) { var d = $(this).addClass(a.config.cssHeader); a.config.onRenderHeader && a.config.onRenderHeader.apply(d) } a.config.headerList[b] = this }), a.config.debug && (benchmark("Built headers:", b), log($tableHeaders)), $tableHeaders } function computeTableHeaderCellIndexes(a) { for (var b = [], c = {}, d = a.getElementsByTagName("THEAD")[0], e = d.getElementsByTagName("TR"), f = 0; f < e.length; f++) for (var g = e[f].cells, h = 0; h < g.length; h++) { var i, j = g[h], k = j.parentNode.rowIndex, l = k + "-" + j.cellIndex, m = j.rowSpan || 1, n = j.colSpan || 1; "undefined" == typeof b[k] && (b[k] = []); for (var o = 0; o < b[k].length + 1; o++) if ("undefined" == typeof b[k][o]) { i = o; break } c[l] = i; for (var o = k; k + m > o; o++) { "undefined" == typeof b[o] && (b[o] = []); for (var p = b[o], q = i; i + n > q; q++) p[q] = "x" } } return c } function checkCellColSpan(a, b, c) { for (var d = [], e = a.tHead.rows, f = e[c].cells, g = 0; g < f.length; g++) { var h = f[g]; h.colSpan > 1 ? d = d.concat(checkCellColSpan(a, headerArr, c++)) : (1 == a.tHead.length || h.rowSpan > 1 || !e[c + 1]) && d.push(h) } return d } function checkHeaderMetadata(a) { return $.metadata && $(a).metadata().sorter === !1 ? !0 : !1 } function checkHeaderOptions(a, b) { return a.config.headers[b] && a.config.headers[b].sorter === !1 ? !0 : !1 } function checkHeaderOptionsSortingLocked(a, b) { return a.config.headers[b] && a.config.headers[b].lockedOrder ? a.config.headers[b].lockedOrder : !1 } function applyWidget(a) { for (var b = a.config.widgets, c = b.length, d = 0; c > d; d++) getWidgetById(b[d]).format(a) } function getWidgetById(a) { for (var b = widgets.length, c = 0; b > c; c++) if (widgets[c].id.toLowerCase() == a.toLowerCase()) return widgets[c] } function formatSortingOrder(a) { return "Number" != typeof a ? "desc" == a.toLowerCase() ? 1 : 0 : 1 == a ? 1 : 0 } function isValueInArray(a, b) { for (var c = b.length, d = 0; c > d; d++) if (b[d][0] == a) return !0; return !1 } function setHeadersCss(a, b, c, d) { b.removeClass(d[0]).removeClass(d[1]); var e = []; b.each(function () { this.sortDisabled || (e[this.column] = $(this)) }); for (var f = c.length, g = 0; f > g; g++) e[c[g][0]].addClass(d[c[g][1]]) } function fixColumnWidth(a) { var b = a.config; if (b.widthFixed) { var c = $("<colgroup>"); $("tr:first td", a.tBodies[0]).each(function () { c.append($("<col>").css("width", $(this).width())) }), $(a).prepend(c) } } function updateHeaderSortCount(a, b) { for (var c = a.config, d = b.length, e = 0; d > e; e++) { var f = b[e], g = c.headerList[f[0]]; g.count = f[1], g.count++ } } function multisort(table, sortList, cache) { if (table.config.debug) var sortTime = new Date; for (var dynamicExp = "var sortWrapper = function(a,b) {", l = sortList.length, i = 0; l > i; i++) { var c = sortList[i][0], order = sortList[i][1], s = "text" == table.config.parsers[c].type ? 0 == order ? makeSortFunction("text", "asc", c) : makeSortFunction("text", "desc", c) : 0 == order ? makeSortFunction("numeric", "asc", c) : makeSortFunction("numeric", "desc", c), e = "e" + i; dynamicExp += "var " + e + " = " + s, dynamicExp += "if(" + e + ") { return " + e + "; } ", dynamicExp += "else { " } var orgOrderCol = cache.normalized[0].length - 1; dynamicExp += "return a[" + orgOrderCol + "]-b[" + orgOrderCol + "];"; for (var i = 0; l > i; i++) dynamicExp += "}; "; return dynamicExp += "return 0; ", dynamicExp += "}; ", table.config.debug && benchmark("Evaling expression:" + dynamicExp, new Date), eval(dynamicExp), cache.normalized.sort(sortWrapper), table.config.debug && benchmark("Sorting on " + sortList.toString() + " and dir " + order + " time:", sortTime), cache } function makeSortFunction(a, b, c) { var d = "a[" + c + "]", e = "b[" + c + "]"; return "text" == a && "asc" == b ? "(" + d + " == " + e + " ? 0 : (" + d + " === null ? Number.POSITIVE_INFINITY : (" + e + " === null ? Number.NEGATIVE_INFINITY : (" + d + " < " + e + ") ? -1 : 1 )));" : "text" == a && "desc" == b ? "(" + d + " == " + e + " ? 0 : (" + d + " === null ? Number.POSITIVE_INFINITY : (" + e + " === null ? Number.NEGATIVE_INFINITY : (" + e + " < " + d + ") ? -1 : 1 )));" : "numeric" == a && "asc" == b ? "(" + d + " === null && " + e + " === null) ? 0 :(" + d + " === null ? Number.POSITIVE_INFINITY : (" + e + " === null ? Number.NEGATIVE_INFINITY : " + d + " - " + e + "));" : "numeric" == a && "desc" == b ? "(" + d + " === null && " + e + " === null) ? 0 :(" + d + " === null ? Number.POSITIVE_INFINITY : (" + e + " === null ? Number.NEGATIVE_INFINITY : " + e + " - " + d + "));" : void 0 } function makeSortText(a) { return "((a[" + a + "] < b[" + a + "]) ? -1 : ((a[" + a + "] > b[" + a + "]) ? 1 : 0));" } function makeSortTextDesc(a) { return "((b[" + a + "] < a[" + a + "]) ? -1 : ((b[" + a + "] > a[" + a + "]) ? 1 : 0));" } function makeSortNumeric(a) { return "a[" + a + "]-b[" + a + "];" } function makeSortNumericDesc(a) { return "b[" + a + "]-a[" + a + "];" } function sortText(a, b) { return table.config.sortLocaleCompare ? a.localeCompare(b) : b > a ? -1 : a > b ? 1 : 0 } function sortTextDesc(a, b) { return table.config.sortLocaleCompare ? b.localeCompare(a) : a > b ? -1 : b > a ? 1 : 0 } function sortNumeric(a, b) { return a - b } function sortNumericDesc(a, b) { return b - a } function getCachedSortType(a, b) { return a[b].type } var parsers = [], widgets = []; this.defaults = { cssHeader: "header", cssAsc: "headerSortUp", cssDesc: "headerSortDown", cssChildRow: "expand-child", sortInitialOrder: "asc", sortMultiSortKey: "shiftKey", sortForce: null, sortAppend: null, sortLocaleCompare: !0, textExtraction: "simple", parsers: {}, widgets: [], widgetZebra: { css: ["even", "odd"] }, headers: {}, widthFixed: !1, cancelSelection: !0, sortList: [], headerList: [], dateFormat: "us", decimal: "/.|,/g", onRenderHeader: null, selectorHeaders: "thead th", debug: !1 }, this.benchmark = benchmark, this.construct = function (a) { return this.each(function () { if (this.tHead && this.tBodies) { var b, c, d, e; this.config = {}, e = $.extend(this.config, $.tablesorter.defaults, a), b = $(this), $.data(this, "tablesorter", e), c = buildHeaders(this), this.config.parsers = buildParserCache(this, c), d = buildCache(this); var f = [e.cssDesc, e.cssAsc]; fixColumnWidth(this), c.click(function (a) { var g = b[0].tBodies[0] && b[0].tBodies[0].rows.length || 0; if (!this.sortDisabled && g > 0) { b.trigger("sortStart"); var h = ($(this), this.column); if (this.order = this.count++ % 2, this.lockedOrder && (this.order = this.lockedOrder), a[e.sortMultiSortKey]) if (isValueInArray(h, e.sortList)) for (var i = 0; i < e.sortList.length; i++) { var j = e.sortList[i], k = e.headerList[j[0]]; j[0] == h && (k.count = j[1], k.count++, j[1] = k.count % 2) } else e.sortList.push([h, this.order]); else { if (e.sortList = [], null != e.sortForce) for (var l = e.sortForce, i = 0; i < l.length; i++) l[i][0] != h && e.sortList.push(l[i]); e.sortList.push([h, this.order]) } return setTimeout(function () { setHeadersCss(b[0], c, e.sortList, f), appendToTable(b[0], multisort(b[0], e.sortList, d)) }, 1), !1 } }).mousedown(function () { return e.cancelSelection ? (this.onselectstart = function () { return !1 }, !1) : void 0 }), b.bind("update", function () { var a = this; setTimeout(function () { a.config.parsers = buildParserCache(a, c), d = buildCache(a) }, 1) }).bind("updateCell", function (a, b) { var c = this.config, e = [b.parentNode.rowIndex - 1, b.cellIndex]; d.normalized[e[0]][e[1]] = c.parsers[e[1]].format(getElementText(c, b), b) }).bind("sorton", function (a, b) { $(this).trigger("sortStart"), e.sortList = b; var g = e.sortList; updateHeaderSortCount(this, g), setHeadersCss(this, c, g, f), appendToTable(this, multisort(this, g, d)) }).bind("appendCache", function () { appendToTable(this, d) }).bind("applyWidgetId", function (a, b) { getWidgetById(b).format(this) }).bind("applyWidgets", function () { applyWidget(this) }), $.metadata && $(this).metadata() && $(this).metadata().sortlist && (e.sortList = $(this).metadata().sortlist), e.sortList.length > 0 && b.trigger("sorton", [e.sortList]), applyWidget(this) } }) }, this.addParser = function (a) { for (var b = parsers.length, c = !0, d = 0; b > d; d++) parsers[d].id.toLowerCase() == a.id.toLowerCase() && (c = !1); c && parsers.push(a) }, this.addWidget = function (a) { widgets.push(a) }, this.formatFloat = function (a) { var b = parseFloat(a); return isNaN(b) ? 0 : b }, this.formatInt = function (a) { var b = parseInt(a); return isNaN(b) ? 0 : b }, this.isDigit = function (a) { return /^[-+]?\d*$/.test($.trim(a.replace(/[,.']/g, ""))) }, this.clearTableBody = function (a) { function b() { for (; this.firstChild;) this.removeChild(this.firstChild) } $.browser.msie ? b.apply(a.tBodies[0]) : a.tBodies[0].innerHTML = "" } } }), $.fn.extend({ tablesorter: $.tablesorter.construct }); var ts = $.tablesorter; ts.addParser({ id: "text", is: function () { return !0 }, format: function (a) { return $.trim(a.toLocaleLowerCase()) }, type: "text" }), ts.addParser({ id: "digit", is: function (a, b) { var c = b.config; return $.tablesorter.isDigit(a, c) }, format: function (a) { return $.tablesorter.formatFloat(a) }, type: "numeric" }), ts.addParser({ id: "currency", is: function (a) { return /^[£$€?.]/.test(a) }, format: function (a) { return $.tablesorter.formatFloat(a.replace(new RegExp(/[£$€]/g), "")) }, type: "numeric" }), ts.addParser({ id: "ipAddress", is: function (a) { return /^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/.test(a) }, format: function (a) { for (var b = a.split("."), c = "", d = b.length, e = 0; d > e; e++) { var f = b[e]; c += 2 == f.length ? "0" + f : f } return $.tablesorter.formatFloat(c) }, type: "numeric" }), ts.addParser({ id: "url", is: function (a) { return /^(https?|ftp|file):\/\/$/.test(a) }, format: function (a) { return jQuery.trim(a.replace(new RegExp(/(https?|ftp|file):\/\//), "")) }, type: "text" }), ts.addParser({ id: "isoDate", is: function (a) { return /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(a) }, format: function (a) { return $.tablesorter.formatFloat("" != a ? new Date(a.replace(new RegExp(/-/g), "/")).getTime() : "0") }, type: "numeric" }), ts.addParser({ id: "percent", is: function (a) { return /\%$/.test($.trim(a)) }, format: function (a) { return $.tablesorter.formatFloat(a.replace(new RegExp(/%/g), "")) }, type: "numeric" }), ts.addParser({ id: "usLongDate", is: function (a) { return a.match(new RegExp(/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/)) }, format: function (a) { return $.tablesorter.formatFloat(new Date(a).getTime()) }, type: "numeric" }), ts.addParser({ id: "shortDate", is: function (a) { return /\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4}/.test(a) }, format: function (a, b) { var c = b.config; return a = a.replace(/\-/g, "/"), "us" == c.dateFormat ? a = a.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$1/$2") : "uk" == c.dateFormat ? a = a.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$2/$1") : ("dd/mm/yy" == c.dateFormat || "dd-mm-yy" == c.dateFormat) && (a = a.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/, "$1/$2/$3")), $.tablesorter.formatFloat(new Date(a).getTime()) }, type: "numeric" }), ts.addParser({ id: "time", is: function (a) { return /^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/.test(a) }, format: function (a) { return $.tablesorter.formatFloat(new Date("2000/01/01 " + a).getTime()) }, type: "numeric" }), ts.addParser({ id: "metadata", is: function () { return !1 }, format: function (a, b, c) { var d = b.config, e = d.parserMetadataName ? d.parserMetadataName : "sortValue"; return $(c).metadata()[e] }, type: "numeric" }), ts.addWidget({ id: "zebra", format: function (a) { if (a.config.debug) var b = new Date; var c, d, e = -1; $("tr:visible", a.tBodies[0]).each(function () { c = $(this), c.hasClass(a.config.cssChildRow) || e++, d = e % 2 == 0, c.removeClass(a.config.widgetZebra.css[d ? 0 : 1]).addClass(a.config.widgetZebra.css[d ? 1 : 0]) }), a.config.debug && $.tablesorter.benchmark("Applying Zebra widget", b) } }) }(jQuery), function () { "use strict"; var a = $("#ranking_roller .players").data("interval") || 5e3, b = $("#ranking_roller .players").data("speed") || 500, c = !0, d = function (a) { var c = $("#ranking_roller .players").width(), d = 0, e = 0, f = []; "left" === a ? $("#ranking_roller li").each(function () { return e = $(this).width(), c > d + e ? (d += e, f.push($(this)), void 0) : ($("#ranking_roller .players ul").animate({ "margin-left": -1 * d + "px" }, b, function () { for (var a = 0; a < f.length; a++) f[a].appendTo("#ranking_roller .players ul"); $("#ranking_roller .players ul").css("margin-left", "0") }), !1) }) : $($("#ranking_roller li").get().reverse()).each(function () { if (e = $(this).width(), !(c > d + e)) { for (var a = 0; a < f.length; a++) f[a].prependTo("#ranking_roller .players ul"); return $("#ranking_roller .players ul").css("margin-left", -1 * d + "px"), $("#ranking_roller .players ul").animate({ "margin-left": "0" }, b, function () { }), !1 } d += e, f.push($(this)) }) }; $(".nav").on("click", function (a) { a.preventDefault(), c = !1, "nav right" === $(this).attr("class") ? d("left") : d("right") }), setInterval(function () { c === !0 && d("left") }, a) }(), $(function () { "use strict"; if (!$.support.placeholder) { var a = document.activeElement; $(":text").focus(function () { "" !== $(this).attr("placeholder") && $(this).val() === $(this).attr("placeholder") && $(this).val("").removeClass("hasPlaceholder") }).blur(function () { "" === $(this).attr("placeholder") || "" !== $(this).val() && $(this).val() !== $(this).attr("placeholder") || $(this).val($(this).attr("placeholder")).addClass("hasPlaceholder") }), $(":text").blur(), $(a).focus(), $("form").submit(function () { $(this).find(".hasPlaceholder").each(function () { $(this).val("") }) }) } }), function () { "use strict"; $(".show-hide").each(function () { "show-hide open default" !== $(this).attr("class") ? $(this).attr("class", "show-hide close") : $(this).attr("class", "show-hide open") }), $(".sh-toggle").on("click", function (a) { a.preventDefault(); var b = $(this).parent(".show-hide"); "show-hide close" === b.attr("class") ? b.attr("class", "show-hide open") : b.attr("class", "show-hide close") }) }(), function () { "use strict"; function a(a) { $.ajax({ type: "POST", url: "js/response.php", data: { data: a } }).done(function (a) { var c = JSON.parse(a).players; b(c) }).fail(function (a) { console.log(a) }) } function b(a) { $(".player_search .live_results").empty(); for (var b = 0; b < a.length; b++) $(".player_search .live_results").append('<li><a href="' + a[b].url + '">' + a[b].name + "</a></li>") } var c = null, d = null, e = 200, f = !0; $(".player_search .search_field .input").focus(function () { $(".live_results").css("display", "block"), setInterval(function () { var b = (new Date).getTime(); b - d > e && f === !1 && c.length > 2 && (a(c), f = !0) }, 100) }), $(".player_search .search_field .input").blur(function () { $(".live_results").css("display", "none") }), $(".player_search .search_field .input").keyup(function () { $(this).children(".input").val(); d = (new Date).getTime() }) }(), function () { "use strict"; $(".graph_button").on("click", function (a) { a.preventDefault(); var b = $(this).data("pid"); $("body").append('<div class="overlay"><div class="graph_box"><a href="#" class="close">X</a><iframe id="rank_frame" src="/Global/Widgets/PlayerProfileFeed/PlayerProfileFeed.aspx?playerID=' + b + '" scrolling="no"></iframe></div></div>') }), $("body").on("click", ".overlay", function () { $(".graph_box").css("opacity", "0"), setTimeout(function () { $(".overlay").remove(), $("body").removeClass("close") }, 400) }) }(), function () { "use strict"; var a = function () { function a(a) { function b(a) { $(a).each(function () { (new Image).src = this, e++ }) } a >= 0 && (d = a), $(".lazyslider li").removeClass("active"), $(".lazyslider li:nth-child(" + (d + 1) + ")").addClass("active"); var f = c[d].image, g = c[d].name, h = c[d].careertot, i = c[d].weektext, j = c[d].worldno; $(".lzys .name").text(g), $(".lzys .career").text(h), $(".lzys .total").text(i), $(".lzys .rank").text(j), $(".lzyimg").css("background-image", 'url("' + f + '")'), d + 2 > c.length ? d = 0 : d++, e < c.length && b([c[d].image]) } if ("none" === $(".page_banner").css("display") || $("#top_slider").length < 1) return !1; var b = 9e3, c = [], d = 0, e = 0; $("#top_slider li").each(function () { var a = {}; a.name = $(this).data("name"), a.image = $(this).data("image"), a.careertot = $(this).data("careertotal"), a.worldno = $(this).data("worldno"), a.weektext = $(this).data("weektext"), a.order = $(this).data("order"), c[a.order] = a }), a(), $(".lazyslider li").on("click", function () { var b = $(this).data("order"); a(b), clearInterval(f) }); var f = setInterval(function () { a() }, b) }; a() }(), function () { "use strict"; var a = !1; $(".menu").click(function () { a === !1 ? ($("#site_nav").addClass("open"), a = !0) : ($("#site_nav").removeClass("open"), a = !1) }) }(), function () { "use strict"; function a(a) { var b = "#download_archive .downloads .item." + a; $("#download_archive .downloads .item").css("display", "none"), $(b + ":odd").addClass("odd"), $(b).css("display", "block") } var b = "ranking"; a(b), $("#tpe").change(function () { a($(this).val()) }) }(), $("table").length > 0 && $("table").tablesorter();
function getQueryStringParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}
$(document).ready(function () {
    $(".event_slider").each(function () {
        if ($(this).children("ul").children("li").length > 1)
            $(this).easySlider({
                auto: true,
                continuous: true,
                prevText: '',
                nextText: '',
                controlsShow: false,
                speed: 400,
                pause: 4000,

            });
    });
});
